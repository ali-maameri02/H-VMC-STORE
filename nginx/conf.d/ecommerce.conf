server {
    listen 80;
    server_name hvmc.store www.hvmc.store;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    server_name hvmc.store www.hvmc.store;

    ssl_certificate /etc/nginx/ssl/live/hvmc.store/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/hvmc.store/privkey.pem;

    # Compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 256;
    gzip_vary on;

    # Static files
    location /static/ {
        alias /app/static/;
        expires 1y;
        access_log off;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    # Media files
    location /media/ {
        alias /app/media/;
        expires 1y;
        access_log off;
        add_header Cache-Control "public";
    }

    # Frontend assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|webp|woff2?)$ {
        root /usr/share/nginx/html;
        expires 1y;
        access_log off;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    # Unified API handling
 location ~ ^/(fr|en)?/api/ {
    proxy_pass http://backend:8000;  # Removed /api/ from here
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # Handle language prefix and API path
    rewrite ^/(fr|en)?/api/(.*) /api/$2 break;
    add_header Cache-Control "no-cache, must-revalidate";
}

    # Admin routes
    location ~ ^/(fr|en)?/admin/ {
        proxy_pass http://backend:8000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect /admin/ /fr/admin/;
        proxy_redirect /fr/admin/ /fr/admin/;
    }

    # Admin redirects
    location = /admin {
        return 301 https://$host/fr/admin/;
    }

    location = /admin/ {
        return 301 https://$host/fr/admin/;
    }

    # Health check
    location /health {
        proxy_pass http://backend:8000/health;
        access_log off;
        return 200 'OK';
        add_header Content-Type text/plain;
    }

    # Frontend SPA handling - must come LAST
    location / {
        root /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
    }

    # Error handling
    proxy_intercept_errors on;
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
}